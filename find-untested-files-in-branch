#!/bin/bash

BRANCH="$1"

set -eu

normal="\e[0m"
red="\e["
bold="\e[1m"
yellow="\e[93m"

if [ -z "$BRANCH" ]; then
  echo "Usage: $0 (branch name)"
  echo "Finds source files in branch name that diverge from master"
  echo "and do not have a corresponding test file"
  exit 1
fi


function searchForTest() {
  local file="$1"
  local color="${2-}"
  ## Remove "A\t" or "M\t" prefix, next tokens is the file path
  local path=$(echo $file | sed 's/^.\s*//')
  
  ## do not search for tests of interfaces or enums 
  if ! grep -Eq "^public interface|^interface|^public enum|^enum" "$path"; then
 
    ## Formulate expected test file name   
    testFile="$(basename "$path" | sed 's/.java$/Test.java/')" 

    ## Search for the test file, report if not found
    find . -path "*/src/test/*" -type f -name "$testFile" \
        | grep -q "." || echo -e "${color}${bold}$file${normal}"
  fi
}

git diff-tree --name-status -r origin/master "$BRANCH" \
| grep -v "^D" \
| grep -Ev "/src/test/|Test.java$" \
| grep -E "\.java$" \
| while read -r file; do
   if [[ "$file" =~ ^A ]]; then
     searchForTest "$file" "$yellow"
   else
     searchForTest "$file" 
   fi 
done;

