#!/bin/bash

set -u

## todo: if current branch is master, abort

function unTrackedCount() {
  git ls-files -o --exclude-standard | wc -l
}

function modifiedCount() {
  git diff-index --quiet HEAD -- | wc -l
}

function filesModifiedInCurrentBranch() {
  git diff --name-only master
}



TRACKED_COUNT=$(($(unTrackedCount) + $(modifiedCount)))

if [ "$TRACKED_COUNT" != 0 ]; then
  echo "ABORT - check in all files before continuing"
  exit 1
fi


fileList=$(tempfile)

filesModifiedInCurrentBranch > $fileList


function depFile() {
  local file=${1-}
  echo "/tmp/$(basename ${file})-deps.txt"
}

function fullDepFile() {
  local file=${1-}
  echo "/tmp/$(basename ${file})-deps-full.txt"
}

javaNamesFile=$(tempfile)
sed 's|.*/||' $fileList | sed 's/.java$//' > $javaNamesFile

## for every file we'll look for imports
for file in $(cat $fileList | grep -v "Test.java"); do
  depFile=$(depFile $file)

  if [ -f "$file" ]; then
    echo "" > $depFile
    while read javaFile; do
      grep "^import " ./$file | grep "$javaFile" >> $depFile
    done < $javaNamesFile
  fi
done


## now that we have computed for each file its dependency list, we'll go over the dependency
## list and add one set transitive deps

for file in $(cat $fileList | grep -v "Test.java"); do
  if [ -f "$file" ]; then
    depFile=$(depFile $file)

    fullDepFile=$(fullDepFile $file)
    cat $depFile > $fullDepFile

    while read javaFile; do
      grep -q $javaFile $depFile && cat $(depFile "${javaFile}.java") >> $fullDepFile
    done < $javaNamesFile
  fi
done;


for i in $(seq 1 3); do
  for file in $(cat $fileList | grep -v "Test.java"); do
    if [ -f "$file" ]; then
      depFile=$(depFile $file)

      fullDepFile=$(fullDepFile $file)

      while read javaFile; do
        grep -q $javaFile $depFile && cat $(depFile "${javaFile}.java") >> $fullDepFile
      done < $javaNamesFile


      sort $fullDepFile | uniq | sed '/^$/d' >> ${fullDepFile}.tmp
      mv ${fullDepFile}.tmp ${fullDepFile}
    fi
  done;
done;


bold=$(tput bold)
normal=$(tput sgr0)



lineLengthsFile=/tmp/line-lengths
echo "" > $lineLengthsFile

## compute the dependency size, sort by it.
for file in $(cat $fileList | grep -v "Test.java"); do
  if [ -f "$file" ]; then
    fullDepFile=$(fullDepFile $file)
    echo "$(wc -l $fullDepFile) $file" >> $lineLengthsFile
  fi
done;

## print result
for file in $(sort -nr $lineLengthsFile | sed 's/.* //'); do
  fullDepFile=$(fullDepFile $file)
  echo -n "${bold}$file${normal}"

  if [ ! -z "$(cat $fullDepFile)" ]; then
    echo ""
    echo "   Dependencies: ($(wc -l $fullDepFile | sed 's/ .*//'))"

    for i in $(cat $fullDepFile | sed 's/;$//' | sed 's/.*\.//'); do
       path=$(find . -name "${i}.java")
       echo "    $path  \\"
    done
  else
    echo "  (0)"
  fi
  echo ""
  echo ""
done;

